Function Description

Complete the migratoryBirds function in the editor below. It should return the lowest type number of the most frequently sighted bird.

migratoryBirds has the following parameter(s):

arr: an array of integers representing types of birds sighted

Solution:

static int migratoryBirds(List<Integer> arr) {
        int max = 0;
        int max_id = 0;
        Collections.sort(arr);
        Map<Integer,Integer> hm = new HashMap<Integer, Integer>();
        for(int id : arr){
            Integer num = hm.get(id);
            hm.put(id, (num == null)?1:num+1);
        }
        Iterator iterator = hm.entrySet().iterator();
        while(iterator.hasNext()) {
            Map.Entry mapElement = (Map.Entry)iterator.next();
            if((int)mapElement.getValue()>max) {
                max =  (int)mapElement.getValue();
                max_id = (int)mapElement.getKey();
            }
        }
        return max_id;
    }
